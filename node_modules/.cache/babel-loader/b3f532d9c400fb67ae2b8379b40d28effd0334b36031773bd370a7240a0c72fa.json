{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/word-guess-game/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport wordExists from 'word-exists';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SECRET_WORD = 'PLANT';\nconst App = () => {\n  _s();\n  const [inputs, setInputs] = useState(Array(5).fill(''));\n  const [guesses, setGuesses] = useState([]);\n  const [error, setError] = useState('');\n  const [showModal, setShowModal] = useState(false);\n  const inputRefs = useRef([]);\n  useEffect(() => {\n    inputRefs.current[0].focus();\n  }, []);\n  const handleChange = (index, value) => {\n    if (/^[A-Za-z]?$/.test(value)) {\n      const newInputs = [...inputs];\n      newInputs[index] = value.toUpperCase();\n      setInputs(newInputs);\n      if (value && index < 4) {\n        inputRefs.current[index + 1].focus();\n      }\n    }\n  };\n  const handleKeyDown = (index, event) => {\n    if (event.key === 'Backspace' && !inputs[index] && index > 0) {\n      inputRefs.current[index - 1].focus();\n    }\n    if (event.key === 'Enter') {\n      handleSubmit();\n    }\n  };\n  const handleSubmit = () => {\n    const word = inputs.join('');\n    if (word.length < 5) {\n      setError('Please enter a 5-letter word.');\n      return;\n    }\n    if (new Set(inputs).size !== inputs.length) {\n      setError('Duplicate letters are not allowed.');\n      return;\n    }\n    if (!wordExists(word.toLowerCase())) {\n      setError('This word does not exist.');\n      return;\n    }\n    setError('');\n    const correctPositions = inputs.filter((letter, i) => letter === SECRET_WORD[i]).length;\n    const correctLetters = inputs.filter(letter => SECRET_WORD.includes(letter)).length - correctPositions;\n    const newGuesses = [...guesses, {\n      word,\n      correctPositions,\n      correctLetters\n    }];\n    setGuesses(newGuesses);\n    setInputs(Array(5).fill(''));\n    inputRefs.current[0].focus();\n    if (newGuesses.length === 10 && word !== SECRET_WORD) {\n      setShowModal(true);\n    }\n    if (correctPosition === 5) {\n      setShowModal(true);\n    }\n  };\n  const resetGame = () => {\n    setInputs(Array(5).fill(''));\n    setGuesses([]);\n    setError('');\n    setShowModal(false);\n    inputRefs.current[0].focus();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Word Guess Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"guesses\",\n      children: guesses.map((guess, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"guess\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"word\",\n          children: guess.word\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"feedback\",\n          children: [guess.correctPositions > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"circle green\",\n            children: guess.correctPositions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 17\n          }, this), guess.correctLetters > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"circle yellow\",\n            children: guess.correctLetters\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 17\n          }, this), guess.correctPositions + guess.correctLetters === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"circle red\",\n            children: \"0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: inputs.map((value, index) => /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        maxLength: \"1\",\n        value: value,\n        ref: el => inputRefs.current[index] = el,\n        onChange: e => handleChange(index, e.target.value),\n        onKeyDown: e => handleKeyDown(index, e)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }, this), showModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Try Again!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: resetGame,\n          children: \"Restart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"vLXjKgumh/Ab65vdfOPYvOrAsrU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","wordExists","jsxDEV","_jsxDEV","SECRET_WORD","App","_s","inputs","setInputs","Array","fill","guesses","setGuesses","error","setError","showModal","setShowModal","inputRefs","current","focus","handleChange","index","value","test","newInputs","toUpperCase","handleKeyDown","event","key","handleSubmit","word","join","length","Set","size","toLowerCase","correctPositions","filter","letter","i","correctLetters","includes","newGuesses","correctPosition","resetGame","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","guess","type","maxLength","ref","el","onChange","e","target","onKeyDown","onClick","_c","$RefreshReg$"],"sources":["/Users/admin/Desktop/word-guess-game/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport wordExists from 'word-exists';\nimport './App.css';\n\nconst SECRET_WORD = 'PLANT';\n\nconst App = () => {\n  const [inputs, setInputs] = useState(Array(5).fill(''));\n  const [guesses, setGuesses] = useState([]);\n  const [error, setError] = useState('');\n  const [showModal, setShowModal] = useState(false);\n  const inputRefs = useRef([]);\n\n  useEffect(() => {\n    inputRefs.current[0].focus();\n  }, []);\n\n  const handleChange = (index, value) => {\n    if (/^[A-Za-z]?$/.test(value)) {\n      const newInputs = [...inputs];\n      newInputs[index] = value.toUpperCase();\n      setInputs(newInputs);\n\n      if (value && index < 4) {\n        inputRefs.current[index + 1].focus();\n      }\n    }\n  };\n\n  const handleKeyDown = (index, event) => {\n    if (event.key === 'Backspace' && !inputs[index] && index > 0) {\n      inputRefs.current[index - 1].focus();\n    }\n    if (event.key === 'Enter') {\n      handleSubmit();\n    }\n  };\n\n  const handleSubmit = () => {\n    const word = inputs.join('');\n    if (word.length < 5) {\n      setError('Please enter a 5-letter word.');\n      return;\n    }\n\n    if (new Set(inputs).size !== inputs.length) {\n      setError('Duplicate letters are not allowed.');\n      return;\n    }\n\n    if (!wordExists(word.toLowerCase())) {\n      setError('This word does not exist.');\n      return;\n    }\n\n    setError('');\n    const correctPositions = inputs.filter((letter, i) => letter === SECRET_WORD[i]).length;\n    const correctLetters = inputs.filter((letter) => SECRET_WORD.includes(letter)).length - correctPositions;\n\n    const newGuesses = [...guesses, { word, correctPositions, correctLetters }];\n    setGuesses(newGuesses);\n\n    setInputs(Array(5).fill(''));\n    inputRefs.current[0].focus();\n\n    if (newGuesses.length === 10 && word !== SECRET_WORD) {\n      setShowModal(true);\n    }\n    if (correctPosition === 5) {\n      setShowModal(true);\n    }\n  };\n\n  const resetGame = () => {\n    setInputs(Array(5).fill(''));\n    setGuesses([]);\n    setError('');\n    setShowModal(false);\n    inputRefs.current[0].focus();\n  };\n\n  return (\n    <div className=\"game-container\">\n      <h1>Word Guess Game</h1>\n      <div className=\"guesses\">\n        {guesses.map((guess, index) => (\n          <div key={index} className=\"guess\">\n            <span className=\"word\">{guess.word}</span>\n            <div className=\"feedback\">\n              {guess.correctPositions > 0 && (\n                <div className=\"circle green\">{guess.correctPositions}</div>\n              )}\n              {guess.correctLetters > 0 && (\n                <div className=\"circle yellow\">{guess.correctLetters}</div>\n              )}\n              {guess.correctPositions + guess.correctLetters === 0 && (\n                <div className=\"circle red\">0</div>\n              )}\n            </div>\n          </div>\n        ))}\n      </div>\n      <div className=\"input-container\">\n        {inputs.map((value, index) => (\n          <input\n            key={index}\n            type=\"text\"\n            maxLength=\"1\"\n            value={value}\n            ref={(el) => (inputRefs.current[index] = el)}\n            onChange={(e) => handleChange(index, e.target.value)}\n            onKeyDown={(e) => handleKeyDown(index, e)}\n          />\n        ))}\n      </div>\n      {error && <div className=\"error\">{error}</div>}\n\n      {showModal && (\n        <div className=\"modal\">\n          <div className=\"modal-content\">\n            <h2>Try Again!</h2>\n            <button onClick={resetGame}>Restart</button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
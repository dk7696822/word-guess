{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/word-guess-game/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './index.css';\n\n// Set the target word here\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TARGET_WORD = 'PLANT';\nconst App = () => {\n  _s();\n  const [guesses, setGuesses] = useState([]);\n  const [currentGuess, setCurrentGuess] = useState('');\n  const [gameOver, setGameOver] = useState(false);\n  const maxAttempts = 10;\n  const handleChange = e => {\n    setCurrentGuess(e.target.value.toUpperCase());\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (currentGuess.length !== 5) {\n      alert('Please enter a 5-letter word.');\n      return;\n    }\n    const feedback = getFeedback(currentGuess);\n    const newGuesses = [...guesses, {\n      word: currentGuess,\n      feedback\n    }];\n    setGuesses(newGuesses);\n    setCurrentGuess('');\n\n    // Check for win or lose condition\n    if (feedback.correct === 5) {\n      setGameOver(true);\n      alert('You did great!');\n    } else if (newGuesses.length >= maxAttempts) {\n      setGameOver(true);\n      alert('Out of attempts! Better luck next time.');\n    }\n  };\n  const getFeedback = guess => {\n    let correct = 0;\n    let present = 0;\n    const targetArr = TARGET_WORD.split('');\n    const guessArr = guess.split('');\n    const targetLetterCount = {};\n\n    // Count occurrences of each letter in the target word\n    targetArr.forEach(letter => {\n      targetLetterCount[letter] = (targetLetterCount[letter] || 0) + 1;\n    });\n\n    // First pass: Count correct positions\n    guessArr.forEach((letter, index) => {\n      if (letter === targetArr[index]) {\n        correct++;\n        targetLetterCount[letter]--;\n        guessArr[index] = null; // Mark as matched\n      }\n    });\n\n    // Second pass: Count wrong positions\n    guessArr.forEach(letter => {\n      if (letter && targetLetterCount[letter] > 0) {\n        present++;\n        targetLetterCount[letter]--;\n      }\n    });\n    return {\n      correct,\n      present\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Word Guess Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: guesses.map((guessObj, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"guess-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"guess-word\",\n          children: guessObj.word\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"feedback\",\n          children: [guessObj.feedback.correct > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"circle correct-circle\",\n            children: guessObj.feedback.correct\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }, this), guessObj.feedback.present > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"circle present-circle\",\n            children: guessObj.feedback.present\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }, this), guessObj.feedback.correct === 0 && guessObj.feedback.present === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"circle absent-circle\",\n            children: \"0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), !gameOver && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: currentGuess,\n        onChange: handleChange,\n        maxLength: \"5\",\n        placeholder: \"Enter a 5-letter word\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"OMha4E2dieWg47PLLcGxsBiWOGY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TARGET_WORD","App","_s","guesses","setGuesses","currentGuess","setCurrentGuess","gameOver","setGameOver","maxAttempts","handleChange","e","target","value","toUpperCase","handleSubmit","preventDefault","length","alert","feedback","getFeedback","newGuesses","word","correct","guess","present","targetArr","split","guessArr","targetLetterCount","forEach","letter","index","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","guessObj","onSubmit","type","onChange","maxLength","placeholder","_c","$RefreshReg$"],"sources":["/Users/admin/Desktop/word-guess-game/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './index.css';\n\n// Set the target word here\nconst TARGET_WORD = 'PLANT';\n\nconst App = () => {\n  const [guesses, setGuesses] = useState([]);\n  const [currentGuess, setCurrentGuess] = useState('');\n  const [gameOver, setGameOver] = useState(false);\n  const maxAttempts = 10;\n\n  const handleChange = (e) => {\n    setCurrentGuess(e.target.value.toUpperCase());\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (currentGuess.length !== 5) {\n      alert('Please enter a 5-letter word.');\n      return;\n    }\n\n    const feedback = getFeedback(currentGuess);\n    const newGuesses = [...guesses, { word: currentGuess, feedback }];\n    setGuesses(newGuesses);\n    setCurrentGuess('');\n\n    // Check for win or lose condition\n    if (feedback.correct === 5) {\n      setGameOver(true);\n      alert('You did great!');\n    } else if (newGuesses.length >= maxAttempts) {\n      setGameOver(true);\n      alert('Out of attempts! Better luck next time.');\n    }\n  };\n\n  const getFeedback = (guess) => {\n    let correct = 0;\n    let present = 0;\n    const targetArr = TARGET_WORD.split('');\n    const guessArr = guess.split('');\n    const targetLetterCount = {};\n\n    // Count occurrences of each letter in the target word\n    targetArr.forEach(letter => {\n      targetLetterCount[letter] = (targetLetterCount[letter] || 0) + 1;\n    });\n\n    // First pass: Count correct positions\n    guessArr.forEach((letter, index) => {\n      if (letter === targetArr[index]) {\n        correct++;\n        targetLetterCount[letter]--;\n        guessArr[index] = null; // Mark as matched\n      }\n    });\n\n    // Second pass: Count wrong positions\n    guessArr.forEach(letter => {\n      if (letter && targetLetterCount[letter] > 0) {\n        present++;\n        targetLetterCount[letter]--;\n      }\n    });\n\n    return { correct, present };\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Word Guess Game</h1>\n      <div className=\"board\">\n        {guesses.map((guessObj, index) => (\n          <div key={index} className=\"guess-row\">\n            <span className=\"guess-word\">{guessObj.word}</span>\n            <div className=\"feedback\">\n              {guessObj.feedback.correct > 0 && (\n                <div className=\"circle correct-circle\">{guessObj.feedback.correct}</div>\n              )}\n              {guessObj.feedback.present > 0 && (\n                <div className=\"circle present-circle\">{guessObj.feedback.present}</div>\n              )}\n              {guessObj.feedback.correct === 0 && guessObj.feedback.present === 0 && (\n                <div className=\"circle absent-circle\">0</div>\n              )}\n            </div>\n          </div>\n        ))}\n      </div>\n      {!gameOver && (\n        <form onSubmit={handleSubmit}>\n          <input\n            type=\"text\"\n            value={currentGuess}\n            onChange={handleChange}\n            maxLength=\"5\"\n            placeholder=\"Enter a 5-letter word\"\n          />\n          <button type=\"submit\">Submit</button>\n        </form>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/word-guess-game/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport wordList from \"word-list-json\";\n\n// const getRandomWord = () => {\n//   const filteredWords = wordList.filter(\n//     (word) => word.length === 5 && new Set(word).size === 5\n//   );\n//   return filteredWords[\n//     Math.floor(Math.random() * filteredWords.length)\n//   ].toUpperCase();\n// };\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst randomWord = '';\nconst App = () => {\n  _s();\n  const [targetWord, setTargetWord] = useState(randomWord);\n  const [currentGuess, setCurrentGuess] = useState([\"\", \"\", \"\", \"\", \"\"]);\n  const [guessArray, setGuessArray] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [activeBox, setActiveBox] = useState(0);\n  const [showModal, setShowModal] = useState(false);\n  console.log(\"filtered word\", targetWord);\n  const handleInputChange = (e, index) => {\n    const value = e.target.value.toUpperCase();\n    if (/^[A-Z]?$/.test(value)) {\n      const newGuess = [...currentGuess];\n      newGuess[index] = value;\n      setCurrentGuess(newGuess);\n      if (value !== \"\" && index < 4) {\n        setActiveBox(index + 1);\n      }\n    }\n  };\n  const handleKeyDown = (e, index) => {\n    if (e.key === \"Backspace\") {\n      const newGuess = [...currentGuess];\n      newGuess[index] = \"\";\n      setCurrentGuess(newGuess);\n      if (index > 0 && currentGuess[index] === \"\") {\n        setActiveBox(index - 1);\n      }\n    }\n    if (e.key === \"Enter\" && currentGuess.join(\"\").length === 5) {\n      handleSubmit();\n    }\n  };\n  const handleSubmit = () => {\n    const guess = currentGuess.join(\"\");\n    if (new Set(guess).size !== 5) {\n      setError(\"Duplicate letters not allowed\");\n      return;\n    }\n    if (!wordList.includes(guess.toLowerCase())) {\n      setError(\"This word doesn't exist\");\n      return;\n    }\n    setError(\"\");\n    let correctPosition = 0;\n    let wrongPosition = 0;\n    for (let i = 0; i < 5; i++) {\n      if (guess[i] === targetWord[i]) {\n        correctPosition++;\n      } else if (targetWord.includes(guess[i])) {\n        wrongPosition++;\n      }\n    }\n    setGuessArray([...guessArray, {\n      guess,\n      correctPosition,\n      wrongPosition\n    }]);\n    setCurrentGuess([\"\", \"\", \"\", \"\", \"\"]);\n    setActiveBox(0);\n    if (correctPosition === 5) {\n      setShowModal(true);\n    }\n    if (guessArray.length + 1 === 10 && correctPosition !== 5) {\n      setTimeout(() => {\n        alert(\"Try Again! The correct word was: \" + targetWord);\n        resetGame();\n      }, 1000);\n    }\n  };\n  const resetGame = () => {\n    setShowModal(false);\n    setTargetWord(randomWord);\n    setGuessArray([]);\n    setCurrentGuess([\"\", \"\", \"\", \"\", \"\"]);\n    setError(\"\");\n    setActiveBox(0);\n  };\n  useEffect(() => {\n    const inputBox = document.getElementById(`box-${activeBox}`);\n    if (inputBox) {\n      inputBox.focus();\n    }\n  }, [activeBox]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Word Guess Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results\",\n      children: guessArray.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: item.guess\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this), item.correctPosition > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"circle green\",\n          children: item.correctPosition\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 15\n        }, this), item.wrongPosition > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"circle yellow\",\n          children: item.wrongPosition\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 15\n        }, this), item.correctPosition === 0 && item.wrongPosition === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"circle red\",\n          children: \"0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-row\",\n      children: currentGuess.map((letter, index) => /*#__PURE__*/_jsxDEV(\"input\", {\n        id: `box-${index}`,\n        type: \"text\",\n        maxLength: \"1\",\n        value: letter,\n        onChange: e => handleInputChange(e, index),\n        onKeyDown: e => handleKeyDown(e, index)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 17\n    }, this), showModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Congratulations! \\uD83C\\uDF89\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"You are a genius!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: resetGame,\n          children: \"Play Again\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"bFnU/GEvx1GAWgLmefem6e51YHA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","wordList","jsxDEV","_jsxDEV","randomWord","App","_s","targetWord","setTargetWord","currentGuess","setCurrentGuess","guessArray","setGuessArray","error","setError","activeBox","setActiveBox","showModal","setShowModal","console","log","handleInputChange","e","index","value","target","toUpperCase","test","newGuess","handleKeyDown","key","join","length","handleSubmit","guess","Set","size","includes","toLowerCase","correctPosition","wrongPosition","i","setTimeout","alert","resetGame","inputBox","document","getElementById","focus","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","letter","id","type","maxLength","onChange","onKeyDown","onClick","_c","$RefreshReg$"],"sources":["/Users/admin/Desktop/word-guess-game/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport wordList from \"word-list-json\";\n\n// const getRandomWord = () => {\n//   const filteredWords = wordList.filter(\n//     (word) => word.length === 5 && new Set(word).size === 5\n//   );\n//   return filteredWords[\n//     Math.floor(Math.random() * filteredWords.length)\n//   ].toUpperCase();\n// };\n\nconst randomWord = ''\n\nconst App = () => {\n  const [targetWord, setTargetWord] = useState(randomWord);\n  const [currentGuess, setCurrentGuess] = useState([\"\", \"\", \"\", \"\", \"\"]);\n  const [guessArray, setGuessArray] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [activeBox, setActiveBox] = useState(0);\n  const [showModal, setShowModal] = useState(false);\n\n  console.log(\"filtered word\", targetWord)\n\n  const handleInputChange = (e, index) => {\n    const value = e.target.value.toUpperCase();\n    if (/^[A-Z]?$/.test(value)) {\n      const newGuess = [...currentGuess];\n      newGuess[index] = value;\n      setCurrentGuess(newGuess);\n\n      if (value !== \"\" && index < 4) {\n        setActiveBox(index + 1);\n      }\n    }\n  };\n\n  const handleKeyDown = (e, index) => {\n    if (e.key === \"Backspace\") {\n      const newGuess = [...currentGuess];\n      newGuess[index] = \"\";\n      setCurrentGuess(newGuess);\n\n      if (index > 0 && currentGuess[index] === \"\") {\n        setActiveBox(index - 1);\n      }\n    }\n\n    if (e.key === \"Enter\" && currentGuess.join(\"\").length === 5) {\n      handleSubmit();\n    }\n  };\n\n  const handleSubmit = () => {\n    const guess = currentGuess.join(\"\");\n    if (new Set(guess).size !== 5) {\n      setError(\"Duplicate letters not allowed\");\n      return;\n    }\n\n    if (!wordList.includes(guess.toLowerCase())) {\n      setError(\"This word doesn't exist\");\n      return;\n    }\n\n    setError(\"\");\n\n    let correctPosition = 0;\n    let wrongPosition = 0;\n\n    for (let i = 0; i < 5; i++) {\n      if (guess[i] === targetWord[i]) {\n        correctPosition++;\n      } else if (targetWord.includes(guess[i])) {\n        wrongPosition++;\n      }\n    }\n\n    setGuessArray([\n      ...guessArray,\n      { guess, correctPosition, wrongPosition },\n    ]);\n\n    setCurrentGuess([\"\", \"\", \"\", \"\", \"\"]);\n    setActiveBox(0);\n\n    if (correctPosition === 5) {\n      setShowModal(true);\n    }\n\n    if (guessArray.length + 1 === 10 && correctPosition !== 5) {\n      setTimeout(() => {\n        alert(\"Try Again! The correct word was: \" + targetWord);\n        resetGame();\n      }, 1000);\n    }\n  };\n\n  const resetGame = () => {\n    setShowModal(false);\n    setTargetWord(randomWord);\n    setGuessArray([]);\n    setCurrentGuess([\"\", \"\", \"\", \"\", \"\"]);\n    setError(\"\");\n    setActiveBox(0);\n  };\n\n  useEffect(() => {\n    const inputBox = document.getElementById(`box-${activeBox}`);\n    if (inputBox) {\n      inputBox.focus();\n    }\n  }, [activeBox]);\n\n  return (\n    <div className=\"App\">\n      <h1>Word Guess Game</h1>\n      <div className=\"results\">\n        {guessArray.map((item, index) => (\n          <div key={index} className=\"result\">\n            <span>{item.guess}</span>\n            {item.correctPosition > 0 && (\n              <div className=\"circle green\">{item.correctPosition}</div>\n            )}\n            {item.wrongPosition > 0 && (\n              <div className=\"circle yellow\">{item.wrongPosition}</div>\n            )}\n            {item.correctPosition === 0 && item.wrongPosition === 0 && (\n              <div className=\"circle red\">0</div>\n            )}\n          </div>\n        ))}\n      </div>\n      <div className=\"input-row\">\n        {currentGuess.map((letter, index) => (\n          <input\n            key={index}\n            id={`box-${index}`}\n            type=\"text\"\n            maxLength=\"1\"\n            value={letter}\n            onChange={(e) => handleInputChange(e, index)}\n            onKeyDown={(e) => handleKeyDown(e, index)}\n          />\n        ))}\n      </div>\n      {error && <p className=\"error\">{error}</p>}\n\n      {showModal && (\n        <div className=\"modal\">\n          <div className=\"modal-content\">\n            <h2>Congratulations! 🎉</h2>\n            <p>You are a genius!</p>\n            <button onClick={resetGame}>Play Again</button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
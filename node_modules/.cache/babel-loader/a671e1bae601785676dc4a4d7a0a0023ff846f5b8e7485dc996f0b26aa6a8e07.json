{"ast":null,"code":"const dictionary = require('./dictionary.json');\nconst wordExists = text => {\n  if (typeof text === 'string') {\n    const cleaned = text.trim().toLowerCase();\n    return !!(cleaned.length > 1 ? dictionary[cleaned.slice(0, 2)] && dictionary[cleaned.slice(0, 2)].includes(cleaned) : cleaned === 'a' || cleaned === 'i');\n  } else {\n    throw new TypeError('The paramater passed to wordExists must be a string');\n  }\n};\nmodule.exports = wordExists;","map":{"version":3,"names":["dictionary","require","wordExists","text","cleaned","trim","toLowerCase","length","slice","includes","TypeError","module","exports"],"sources":["/Users/admin/Desktop/word-guess-game/node_modules/word-exists/wordExists.js"],"sourcesContent":["const dictionary = require('./dictionary.json');\n\nconst wordExists = text => {\n\tif (typeof text === 'string') {\n\t\tconst cleaned = text.trim().toLowerCase();\n\n\t\treturn !!(cleaned.length > 1\n\t\t\t? dictionary[cleaned.slice(0, 2)] &&\n\t\t\t  dictionary[cleaned.slice(0, 2)].includes(cleaned)\n\t\t\t: cleaned === 'a' || cleaned === 'i');\n\t} else {\n\t\tthrow new TypeError('The paramater passed to wordExists must be a string');\n\t}\n};\n\nmodule.exports = wordExists;\n"],"mappings":"AAAA,MAAMA,UAAU,GAAGC,OAAO,CAAC,mBAAmB,CAAC;AAE/C,MAAMC,UAAU,GAAGC,IAAI,IAAI;EAC1B,IAAI,OAAOA,IAAI,KAAK,QAAQ,EAAE;IAC7B,MAAMC,OAAO,GAAGD,IAAI,CAACE,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;IAEzC,OAAO,CAAC,EAAEF,OAAO,CAACG,MAAM,GAAG,CAAC,GACzBP,UAAU,CAACI,OAAO,CAACI,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAC/BR,UAAU,CAACI,OAAO,CAACI,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAACC,QAAQ,CAACL,OAAO,CAAC,GACjDA,OAAO,KAAK,GAAG,IAAIA,OAAO,KAAK,GAAG,CAAC;EACvC,CAAC,MAAM;IACN,MAAM,IAAIM,SAAS,CAAC,qDAAqD,CAAC;EAC3E;AACD,CAAC;AAEDC,MAAM,CAACC,OAAO,GAAGV,UAAU","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
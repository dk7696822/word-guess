{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/word-guess-game/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { words } from 'popular-english-words';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getCommonFiveLetterWords = () => {\n  const popularWords = words.getMostPopular(10000);\n  const fiveLetterWords = popularWords.filter(word => {\n    return word.length === 5 && new Set(word).size === 5;\n  });\n  return fiveLetterWords;\n};\nconst App = () => {\n  _s();\n  var _guesses;\n  const [secretWord, setSecretWord] = useState('');\n  const [inputs, setInputs] = useState(Array(5).fill(''));\n  const [guesses, setGuesses] = useState([]);\n  const [error, setError] = useState('');\n  const [showModal, setShowModal] = useState(false);\n  const inputRefs = React.useRef([]);\n  useEffect(() => {\n    const allWords = getCommonFiveLetterWords();\n    const uniqueWords = allWords.filter(word => new Set(word).size === 5);\n    setSecretWord(uniqueWords[Math.floor(Math.random() * uniqueWords.length)].toUpperCase());\n  }, []);\n  const handleChange = (index, value) => {\n    if (/^[A-Za-z]?$/.test(value)) {\n      const newInputs = [...inputs];\n      newInputs[index] = value.toUpperCase();\n      setInputs(newInputs);\n      if (value && index < 4) {\n        inputRefs.current[index + 1].focus();\n      }\n    }\n  };\n  const handleKeyDown = (index, event) => {\n    if (event.key === 'Backspace' && !inputs[index] && index > 0) {\n      inputRefs.current[index - 1].focus();\n    }\n    if (event.key === 'Enter' && inputs.every(input => input)) {\n      handleSubmit();\n    }\n  };\n  const handleSubmit = () => {\n    const word = inputs.join('');\n    if (new Set(word).size !== 5) {\n      setError('Duplicate letters not allowed');\n      return;\n    }\n    if (!getCommonFiveLetterWords().includes(word.toLowerCase())) {\n      setError('Word does not exist');\n      return;\n    }\n    setError('');\n    const guessResult = calculateResult(word);\n    setGuesses([...guesses, {\n      word,\n      ...guessResult\n    }]);\n    setInputs(Array(5).fill(''));\n    if (guessResult.correct === 5) {\n      setShowModal(true);\n    } else if (guesses.length === 9) {\n      setShowModal(true);\n    }\n    inputRefs.current[0].focus();\n  };\n  const calculateResult = word => {\n    let correct = 0;\n    let misplaced = 0;\n    const secretArray = secretWord.split('');\n    const wordArray = word.split('');\n    wordArray.forEach((letter, index) => {\n      if (letter === secretArray[index]) {\n        correct++;\n        secretArray[index] = null;\n        wordArray[index] = null;\n      }\n    });\n    wordArray.forEach(letter => {\n      if (letter && secretArray.includes(letter)) {\n        misplaced++;\n        secretArray[secretArray.indexOf(letter)] = null;\n      }\n    });\n    return {\n      correct,\n      misplaced\n    };\n  };\n  const resetGame = () => {\n    const words = getCommonFiveLetterWords();\n    const randomWord = words[Math.floor(Math.random() * words.length)].toUpperCase();\n    setSecretWord(randomWord);\n    setInputs(Array(5).fill(''));\n    setGuesses([]);\n    setError('');\n    setShowModal(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Word Guess Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"guesses-container\",\n      children: guesses.map((guess, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"guess-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: guess.word\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"result-circles\",\n          children: [guess.correct > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"circle green\",\n            children: guess.correct\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 37\n          }, this), guess.misplaced > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"circle yellow\",\n            children: guess.misplaced\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 39\n          }, this), guess.correct === 0 && guess.misplaced === 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"circle red\",\n            children: \"0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: inputs.map((letter, index) => /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: el => inputRefs.current[index] = el,\n        value: letter,\n        onChange: e => handleChange(index, e.target.value),\n        onKeyDown: e => handleKeyDown(index, e),\n        maxLength: \"1\"\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }, this), showModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [((_guesses = guesses[guesses.length - 1]) === null || _guesses === void 0 ? void 0 : _guesses.correct) === 5 ? /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Congratulations! \\uD83C\\uDF89 You are a genius!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Try Again! The correct word was: \", secretWord]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: resetGame,\n          children: \"Play Again\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"DJOAqqB6jM0aUeTO0gtN4wUe6gA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","words","jsxDEV","_jsxDEV","getCommonFiveLetterWords","popularWords","getMostPopular","fiveLetterWords","filter","word","length","Set","size","App","_s","_guesses","secretWord","setSecretWord","inputs","setInputs","Array","fill","guesses","setGuesses","error","setError","showModal","setShowModal","inputRefs","useRef","allWords","uniqueWords","Math","floor","random","toUpperCase","handleChange","index","value","test","newInputs","current","focus","handleKeyDown","event","key","every","input","handleSubmit","join","includes","toLowerCase","guessResult","calculateResult","correct","misplaced","secretArray","split","wordArray","forEach","letter","indexOf","resetGame","randomWord","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","guess","ref","el","onChange","e","target","onKeyDown","maxLength","onClick","_c","$RefreshReg$"],"sources":["/Users/admin/Desktop/word-guess-game/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { words } from 'popular-english-words';\nimport './App.css';\n\nconst getCommonFiveLetterWords = () => {\n  const popularWords = words.getMostPopular(10000);\n  const fiveLetterWords = popularWords.filter(word => {\n    return word.length === 5 && new Set(word).size === 5;\n  });\n  return fiveLetterWords;\n};\n\nconst App = () => {\n  const [secretWord, setSecretWord] = useState('');\n  const [inputs, setInputs] = useState(Array(5).fill(''));\n  const [guesses, setGuesses] = useState([]);\n  const [error, setError] = useState('');\n  const [showModal, setShowModal] = useState(false);\n  const inputRefs = React.useRef([]);\n\n  useEffect(() => {\n    const allWords = getCommonFiveLetterWords();\n    const uniqueWords = allWords.filter(word => new Set(word).size === 5);\n    setSecretWord(uniqueWords[Math.floor(Math.random() * uniqueWords.length)].toUpperCase());\n  }, []);\n\n  const handleChange = (index, value) => {\n    if (/^[A-Za-z]?$/.test(value)) {\n      const newInputs = [...inputs];\n      newInputs[index] = value.toUpperCase();\n      setInputs(newInputs);\n\n      if (value && index < 4) {\n        inputRefs.current[index + 1].focus();\n      }\n    }\n  };\n\n  const handleKeyDown = (index, event) => {\n    if (event.key === 'Backspace' && !inputs[index] && index > 0) {\n      inputRefs.current[index - 1].focus();\n    }\n    if (event.key === 'Enter' && inputs.every(input => input)) {\n      handleSubmit();\n    }\n  };\n\n  const handleSubmit = () => {\n    const word = inputs.join('');\n    if (new Set(word).size !== 5) {\n      setError('Duplicate letters not allowed');\n      return;\n    }\n    if (!getCommonFiveLetterWords().includes(word.toLowerCase())) {\n      setError('Word does not exist');\n      return;\n    }\n    setError('');\n    const guessResult = calculateResult(word);\n    setGuesses([...guesses, { word, ...guessResult }]);\n    setInputs(Array(5).fill(''));\n\n    if (guessResult.correct === 5) {\n      setShowModal(true);\n    } else if (guesses.length === 9) {\n      setShowModal(true);\n    }\n    inputRefs.current[0].focus();\n  };\n\n  const calculateResult = (word) => {\n    let correct = 0;\n    let misplaced = 0;\n    const secretArray = secretWord.split('');\n    const wordArray = word.split('');\n\n    wordArray.forEach((letter, index) => {\n      if (letter === secretArray[index]) {\n        correct++;\n        secretArray[index] = null;\n        wordArray[index] = null;\n      }\n    });\n\n    wordArray.forEach((letter) => {\n      if (letter && secretArray.includes(letter)) {\n        misplaced++;\n        secretArray[secretArray.indexOf(letter)] = null;\n      }\n    });\n\n    return { correct, misplaced };\n  };\n\n  const resetGame = () => {\n    const words = getCommonFiveLetterWords();\n    const randomWord = words[Math.floor(Math.random() * words.length)].toUpperCase();\n    setSecretWord(randomWord);\n    setInputs(Array(5).fill(''));\n    setGuesses([]);\n    setError('');\n    setShowModal(false);\n  };\n\n  return (\n    <div className=\"game-container\">\n      <h1>Word Guess Game</h1>\n      <div className=\"guesses-container\">\n        {guesses.map((guess, index) => (\n          <div key={index} className=\"guess-row\">\n            <span>{guess.word}</span>\n            <div className=\"result-circles\">\n              {guess.correct > 0 && <span className=\"circle green\">{guess.correct}</span>}\n              {guess.misplaced > 0 && <span className=\"circle yellow\">{guess.misplaced}</span>}\n              {guess.correct === 0 && guess.misplaced === 0 && (\n                <span className=\"circle red\">0</span>\n              )}\n            </div>\n          </div>\n        ))}\n      </div>\n      <div className=\"input-container\">\n        {inputs.map((letter, index) => (\n          <input\n            key={index}\n            ref={(el) => (inputRefs.current[index] = el)}\n            value={letter}\n            onChange={(e) => handleChange(index, e.target.value)}\n            onKeyDown={(e) => handleKeyDown(index, e)}\n            maxLength=\"1\"\n          />\n        ))}\n      </div>\n      {error && <p className=\"error\">{error}</p>}\n      {showModal && (\n        <div className=\"modal\">\n          <div className=\"modal-content\">\n            {guesses[guesses.length - 1]?.correct === 5 ? (\n              <h2>Congratulations! 🎉 You are a genius!</h2>\n            ) : (\n              <h2>Try Again! The correct word was: {secretWord}</h2>\n            )}\n            <button onClick={resetGame}>Play Again</button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/word-guess-game/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SECRET_WORD = 'PLANT';\nconst App = () => {\n  _s();\n  const [inputs, setInputs] = useState(Array(5).fill(''));\n  const [attempts, setAttempts] = useState([]);\n  const [error, setError] = useState('');\n  const [gameOver, setGameOver] = useState(false);\n  const checkDuplicate = word => {\n    return new Set(word).size !== word.length;\n  };\n  const handleChange = (value, index) => {\n    if (value.length > 1 || /[^a-zA-Z]/.test(value)) return;\n    const newInputs = [...inputs];\n    newInputs[index] = value.toUpperCase();\n    setInputs(newInputs);\n    setError('');\n    if (value && index < 4) {\n      document.getElementById(`box-${index + 1}`).focus();\n    }\n  };\n  const handleKeyDown = (e, index) => {\n    if (e.key === 'Backspace') {\n      const newInputs = [...inputs];\n      if (inputs[index] === '' && index > 0) {\n        newInputs[index - 1] = '';\n        setInputs(newInputs);\n        document.getElementById(`box-${index - 1}`).focus();\n      } else {\n        newInputs[index] = '';\n        setInputs(newInputs);\n      }\n    }\n    if (e.key === 'Enter' && inputs.join('').length === 5) {\n      handleSubmit(e);\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const guess = inputs.join('');\n    if (checkDuplicate(guess)) {\n      setError('Duplicate letters are not allowed!');\n      return;\n    }\n    if (guess.length !== 5) {\n      setError('Please enter a 5-letter word!');\n      return;\n    }\n    let correct = 0;\n    let misplaced = 0;\n    guess.split('').forEach((letter, index) => {\n      if (SECRET_WORD[index] === letter) {\n        correct++;\n      } else if (SECRET_WORD.includes(letter)) {\n        misplaced++;\n      }\n    });\n    setAttempts([...attempts, {\n      guess,\n      correct,\n      misplaced\n    }]);\n    setInputs(Array(5).fill(''));\n    if (correct === 5) {\n      setGameOver(true);\n    } else if (attempts.length + 1 === 10) {\n      setGameOver(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Word Guess Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), attempts.map((attempt, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"attempt-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"word\",\n        children: attempt.guess\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), attempt.correct > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"result green\",\n        children: attempt.correct\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 35\n      }, this), attempt.misplaced > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"result yellow\",\n        children: attempt.misplaced\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 37\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this)), !gameOver && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-boxes\",\n        children: inputs.map((letter, index) => /*#__PURE__*/_jsxDEV(\"input\", {\n          id: `box-${index}`,\n          type: \"text\",\n          maxLength: \"1\",\n          value: letter,\n          onChange: e => handleChange(e.target.value, index),\n          onKeyDown: e => handleKeyDown(e, index),\n          required: true\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this), gameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-over\",\n      children: attempts[attempts.length - 1].correct === 5 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"You won! The word was: \", SECRET_WORD]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Better luck next time! The word was: \", SECRET_WORD]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"uj6MkP+kfpZtpV00PilZrg17GUg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","SECRET_WORD","App","_s","inputs","setInputs","Array","fill","attempts","setAttempts","error","setError","gameOver","setGameOver","checkDuplicate","word","Set","size","length","handleChange","value","index","test","newInputs","toUpperCase","document","getElementById","focus","handleKeyDown","e","key","join","handleSubmit","preventDefault","guess","correct","misplaced","split","forEach","letter","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","attempt","onSubmit","id","type","maxLength","onChange","target","onKeyDown","required","_c","$RefreshReg$"],"sources":["/Users/admin/Desktop/word-guess-game/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nconst SECRET_WORD = 'PLANT';\n\nconst App = () => {\n  const [inputs, setInputs] = useState(Array(5).fill(''));\n  const [attempts, setAttempts] = useState([]);\n  const [error, setError] = useState('');\n  const [gameOver, setGameOver] = useState(false);\n\n  const checkDuplicate = (word) => {\n    return new Set(word).size !== word.length;\n  };\n\n  const handleChange = (value, index) => {\n    if (value.length > 1 || /[^a-zA-Z]/.test(value)) return;\n    const newInputs = [...inputs];\n    newInputs[index] = value.toUpperCase();\n    setInputs(newInputs);\n    setError('');\n\n    if (value && index < 4) {\n      document.getElementById(`box-${index + 1}`).focus();\n    }\n  };\n\n  const handleKeyDown = (e, index) => {\n    if (e.key === 'Backspace') {\n      const newInputs = [...inputs];\n      if (inputs[index] === '' && index > 0) {\n        newInputs[index - 1] = '';\n        setInputs(newInputs);\n        document.getElementById(`box-${index - 1}`).focus();\n      } else {\n        newInputs[index] = '';\n        setInputs(newInputs);\n      }\n    }\n    if (e.key === 'Enter' && inputs.join('').length === 5) {\n      handleSubmit(e);\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const guess = inputs.join('');\n    \n    if (checkDuplicate(guess)) {\n      setError('Duplicate letters are not allowed!');\n      return;\n    }\n\n    if (guess.length !== 5) {\n      setError('Please enter a 5-letter word!');\n      return;\n    }\n\n    let correct = 0;\n    let misplaced = 0;\n\n    guess.split('').forEach((letter, index) => {\n      if (SECRET_WORD[index] === letter) {\n        correct++;\n      } else if (SECRET_WORD.includes(letter)) {\n        misplaced++;\n      }\n    });\n\n    setAttempts([...attempts, { guess, correct, misplaced }]);\n    setInputs(Array(5).fill(''));\n\n    if (correct === 5) {\n      setGameOver(true);\n    } else if (attempts.length + 1 === 10) {\n      setGameOver(true);\n    }\n  };\n\n  return (\n    <div className=\"game-container\">\n      <h1>Word Guess Game</h1>\n\n      {attempts.map((attempt, index) => (\n        <div key={index} className=\"attempt-row\">\n          <span className=\"word\">{attempt.guess}</span>\n          {attempt.correct > 0 && <span className=\"result green\">{attempt.correct}</span>}\n          {attempt.misplaced > 0 && <span className=\"result yellow\">{attempt.misplaced}</span>}\n        </div>\n      ))}\n\n      {!gameOver && (\n        <form onSubmit={handleSubmit}>\n          <div className=\"input-boxes\">\n            {inputs.map((letter, index) => (\n              <input\n                key={index}\n                id={`box-${index}`}\n                type=\"text\"\n                maxLength=\"1\"\n                value={letter}\n                onChange={(e) => handleChange(e.target.value, index)}\n                onKeyDown={(e) => handleKeyDown(e, index)}\n                required\n              />\n            ))}\n          </div>\n          {error && <div className=\"error\">{error}</div>}\n        </form>\n      )}\n\n      {gameOver && (\n        <div className=\"game-over\">\n          {attempts[attempts.length - 1].correct === 5 \n            ? <p>You won! The word was: {SECRET_WORD}</p>\n            : <p>Better luck next time! The word was: {SECRET_WORD}</p>\n          }\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
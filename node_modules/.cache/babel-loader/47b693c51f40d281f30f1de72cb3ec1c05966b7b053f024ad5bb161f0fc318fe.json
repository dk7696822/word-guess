{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/word-guess-game/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { words } from 'popular-english-words';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getCommonFiveLetterWords = () => {\n  // Get a large list of the most popular English words\n  const popularWords = words.getMostPopular(10000);\n\n  // Filter to get 5-letter words without duplicate letters\n  const fiveLetterWords = popularWords.filter(word => {\n    return word.length === 5 && new Set(word).size === 5;\n  });\n  return fiveLetterWords;\n};\nconst App = () => {\n  _s();\n  const [secretWord, setSecretWord] = useState('');\n  const [inputs, setInputs] = useState(Array(5).fill(''));\n  const [guesses, setGuesses] = useState([]);\n  const [error, setError] = useState('');\n  const [showModal, setShowModal] = useState(false);\n  const [modalMessage, setModalMessage] = useState('');\n  const inputRefs = React.useRef([]);\n  useEffect(() => {\n    // Initialize the game with a random 5-letter word\n    const words = getCommonFiveLetterWords();\n    const randomWord = words[Math.floor(Math.random() * words.length)].toUpperCase();\n    setSecretWord(randomWord);\n  }, []);\n  const handleChange = (index, value) => {\n    if (/^[A-Za-z]?$/.test(value)) {\n      const newInputs = [...inputs];\n      newInputs[index] = value.toUpperCase();\n      setInputs(newInputs);\n      if (value && index < 4) {\n        inputRefs.current[index + 1].focus();\n      }\n    }\n  };\n  const handleKeyDown = (index, event) => {\n    if (event.key === 'Backspace' && !inputs[index] && index > 0) {\n      inputRefs.current[index - 1].focus();\n    }\n    if (event.key === 'Enter') {\n      handleSubmit();\n    }\n  };\n  const handleSubmit = () => {\n    const word = inputs.join('');\n    if (word.length < 5) {\n      setError('Please enter a 5-letter word.');\n      return;\n    }\n    if (new Set(inputs).size !== inputs.length) {\n      setError('Duplicate letters are not allowed.');\n      return;\n    }\n    const commonWords = getCommonFiveLetterWords();\n    if (!commonWords.includes(word.toLowerCase())) {\n      setError('This word does not exist.');\n      return;\n    }\n    setError('');\n    const correctPositions = inputs.filter((letter, i) => letter === secretWord[i]).length;\n    const correctLetters = inputs.filter(letter => secretWord.includes(letter)).length - correctPositions;\n    const newGuesses = [...guesses, {\n      word,\n      correctPositions,\n      correctLetters\n    }];\n    setGuesses(newGuesses);\n    setInputs(Array(5).fill(''));\n    inputRefs.current[0].focus();\n    if (correctPositions === 5) {\n      setModalMessage('Congratulations! ðŸŽ‰ You are a genius!');\n      setShowModal(true);\n    } else if (newGuesses.length === 10) {\n      setModalMessage(`Try Again! The correct word was: ${secretWord}`);\n      setShowModal(true);\n    }\n  };\n  const resetGame = () => {\n    const words = getCommonFiveLetterWords();\n    const randomWord = words[Math.floor(Math.random() * words.length)].toUpperCase();\n    setSecretWord(randomWord);\n    setInputs(Array(5).fill(''));\n    setGuesses([]);\n    setError('');\n    setShowModal(false);\n    inputRefs.current[0].focus();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Word Guess Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"guesses\",\n      children: guesses.map((guess, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"guess\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"word\",\n          children: guess.word\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"feedback\",\n          children: [guess.correctPositions > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"circle green\",\n            children: guess.correctPositions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 17\n          }, this), guess.correctLetters > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"circle yellow\",\n            children: guess.correctLetters\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 17\n          }, this), guess.correctPositions + guess.correctLetters === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"circle red\",\n            children: \"0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: inputs.map((value, index) => /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        maxLength: \"1\",\n        value: value,\n        ref: el => inputRefs.current[index] = el,\n        onChange: e => handleChange(index, e.target.value),\n        onKeyDown: e => handleKeyDown(index, e)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }, this), showModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: modalMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: resetGame,\n          children: \"Play Again\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"GLFYJBJvUQeCu0OQqGv8fPAsV6I=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","words","jsxDEV","_jsxDEV","getCommonFiveLetterWords","popularWords","getMostPopular","fiveLetterWords","filter","word","length","Set","size","App","_s","secretWord","setSecretWord","inputs","setInputs","Array","fill","guesses","setGuesses","error","setError","showModal","setShowModal","modalMessage","setModalMessage","inputRefs","useRef","randomWord","Math","floor","random","toUpperCase","handleChange","index","value","test","newInputs","current","focus","handleKeyDown","event","key","handleSubmit","join","commonWords","includes","toLowerCase","correctPositions","letter","i","correctLetters","newGuesses","resetGame","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","guess","type","maxLength","ref","el","onChange","e","target","onKeyDown","onClick","_c","$RefreshReg$"],"sources":["/Users/admin/Desktop/word-guess-game/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { words } from 'popular-english-words';\nimport './App.css';\n\nconst getCommonFiveLetterWords = () => {\n  // Get a large list of the most popular English words\n  const popularWords = words.getMostPopular(10000);\n\n  // Filter to get 5-letter words without duplicate letters\n  const fiveLetterWords = popularWords.filter(word => {\n    return word.length === 5 && new Set(word).size === 5;\n  });\n\n  return fiveLetterWords;\n};\n\nconst App = () => {\n  const [secretWord, setSecretWord] = useState('');\n  const [inputs, setInputs] = useState(Array(5).fill(''));\n  const [guesses, setGuesses] = useState([]);\n  const [error, setError] = useState('');\n  const [showModal, setShowModal] = useState(false);\n  const [modalMessage, setModalMessage] = useState('');\n  const inputRefs = React.useRef([]);\n\n  useEffect(() => {\n    // Initialize the game with a random 5-letter word\n    const words = getCommonFiveLetterWords();\n    const randomWord = words[Math.floor(Math.random() * words.length)].toUpperCase();\n    setSecretWord(randomWord);\n  }, []);\n\n  const handleChange = (index, value) => {\n    if (/^[A-Za-z]?$/.test(value)) {\n      const newInputs = [...inputs];\n      newInputs[index] = value.toUpperCase();\n      setInputs(newInputs);\n\n      if (value && index < 4) {\n        inputRefs.current[index + 1].focus();\n      }\n    }\n  };\n\n  const handleKeyDown = (index, event) => {\n    if (event.key === 'Backspace' && !inputs[index] && index > 0) {\n      inputRefs.current[index - 1].focus();\n    }\n    if (event.key === 'Enter') {\n      handleSubmit();\n    }\n  };\n\n  const handleSubmit = () => {\n    const word = inputs.join('');\n    if (word.length < 5) {\n      setError('Please enter a 5-letter word.');\n      return;\n    }\n\n    if (new Set(inputs).size !== inputs.length) {\n      setError('Duplicate letters are not allowed.');\n      return;\n    }\n\n    const commonWords = getCommonFiveLetterWords();\n    if (!commonWords.includes(word.toLowerCase())) {\n      setError('This word does not exist.');\n      return;\n    }\n\n    setError('');\n    const correctPositions = inputs.filter((letter, i) => letter === secretWord[i]).length;\n    const correctLetters = inputs.filter((letter) => secretWord.includes(letter)).length - correctPositions;\n\n    const newGuesses = [...guesses, { word, correctPositions, correctLetters }];\n    setGuesses(newGuesses);\n\n    setInputs(Array(5).fill(''));\n    inputRefs.current[0].focus();\n\n    if (correctPositions === 5) {\n      setModalMessage('Congratulations! ðŸŽ‰ You are a genius!');\n      setShowModal(true);\n    } else if (newGuesses.length === 10) {\n      setModalMessage(`Try Again! The correct word was: ${secretWord}`);\n      setShowModal(true);\n    }\n  };\n\n  const resetGame = () => {\n    const words = getCommonFiveLetterWords();\n    const randomWord = words[Math.floor(Math.random() * words.length)].toUpperCase();\n    setSecretWord(randomWord);\n    setInputs(Array(5).fill(''));\n    setGuesses([]);\n    setError('');\n    setShowModal(false);\n    inputRefs.current[0].focus();\n  };\n\n  return (\n    <div className=\"game-container\">\n      <h1>Word Guess Game</h1>\n      <div className=\"guesses\">\n        {guesses.map((guess, index) => (\n          <div key={index} className=\"guess\">\n            <span className=\"word\">{guess.word}</span>\n            <div className=\"feedback\">\n              {guess.correctPositions > 0 && (\n                <div className=\"circle green\">{guess.correctPositions}</div>\n              )}\n              {guess.correctLetters > 0 && (\n                <div className=\"circle yellow\">{guess.correctLetters}</div>\n              )}\n              {guess.correctPositions + guess.correctLetters === 0 && (\n                <div className=\"circle red\">0</div>\n              )}\n            </div>\n          </div>\n        ))}\n      </div>\n      <div className=\"input-container\">\n        {inputs.map((value, index) => (\n          <input\n            key={index}\n            type=\"text\"\n            maxLength=\"1\"\n            value={value}\n            ref={(el) => (inputRefs.current[index] = el)}\n            onChange={(e) => handleChange(index, e.target.value)}\n            onKeyDown={(e) => handleKeyDown(index, e)}\n          />\n        ))}\n      </div>\n      {error && <div className=\"error\">{error}</div>}\n\n      {showModal && (\n        <div className=\"modal\">\n          <div className=\"modal-content\">\n            <h2>{modalMessage}</h2>\n            <button onClick={resetGame}>Play Again</button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}